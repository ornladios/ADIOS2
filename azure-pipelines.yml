trigger:
- master
- release*

pr:
  autoCancel: true
  branches:
    include:
    - master
    - release*

resources:
  containers:
  - container: el7-intel-ohpc
    image: ornladios/adios2:ci-el7-intel-ohpc
  - container: el7-intel-openmpi-ohpc
    image: ornladios/adios2:ci-el7-intel-openmpi-ohpc

jobs:
- job: windows
  timeoutInMinutes: 90
  strategy:
    matrix:
      win2016_vs2017:
        hostImage: vs2017-win2016
      win2016_vs2017_msmpi_ninja:
        hostImage: vs2017-win2016
      win2019_vs2019_ninja:
        hostImage: windows-2019
      win2019_vs2019_msmpi:
        hostImage: windows-2019

  pool:
    vmImage: $[ variables['hostImage'] ]

  steps:
    - powershell: scripts/ci/azure/windows-setup.ps1
      name: Setup
    - bash: scripts/ci/azure/run.sh update
      name: Update
    - bash: scripts/ci/azure/run.sh configure
      name: Configure
    - bash: scripts/ci/azure/run.sh build
      name: Build
    - bash: scripts/ci/azure/run.sh test
      name: Test

#- job: macos
#  timeoutInMinutes: 90
#  strategy:
#    matrix:
#      macos1014_xcode103_ninja:
#        hostImage: 'macOS-10.14'
#      macos1015_xcode111_make:
#        hostImage: 'macOS-10.15'
#
#  pool:
#    vmImage: $[ variables['hostImage'] ]
#  steps:
#    - bash: scripts/ci/azure/macos-setup.sh
#      name: Setup
#    - bash: scripts/ci/azure/run.sh update
#      name: Update
#    - bash: scripts/ci/azure/run.sh configure
#      name: Configure
#    - bash: scripts/ci/azure/run.sh build
#      name: Build
#    - bash: scripts/ci/azure/run.sh test
#      name: Test

- job: linux
  timeoutInMinutes: 90
  strategy:
    matrix:
      el7_intel_ohpc:
        containerResource: el7-intel-ohpc
      el7_intel_openmpi_ohpc:
        containerResource: el7-intel-openmpi-ohpc
  container: $[ variables['containerResource'] ]
  steps:
    - bash: scripts/ci/azure/linux-setup.sh
      env:
        INTEL_LICENSE_FILE_CONTENT: $(INTEL_LICENSE_FILE_CONTENT)
      name: Setup
    - bash: scripts/ci/azure/run.sh update
      name: Update
    - bash: scripts/ci/azure/run.sh configure
      name: Configure
    - bash: scripts/ci/azure/run.sh build
      name: Build
    - bash: scripts/ci/azure/run.sh test
      name: Test
