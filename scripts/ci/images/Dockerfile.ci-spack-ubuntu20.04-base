# vim: ft=dockerfile
ARG BASE_IMAGE=ecpe4s/ubuntu20.04-runner-amd64-gcc-11.4:2023.08.01
FROM $BASE_IMAGE

ARG E4S_VERSION=23.08
ARG ENABLED_ENVS="serial,ompi,mpich"
ARG EXTERNAL_PACKAGES
ARG EXTRA_VARIANTS
ARG PATCH_VARIANT_XROOTD


# Clone and patch spack
WORKDIR /
RUN if ! [ -d /spack ]; then \
      git clone --depth 1 --single-branch --branch e4s-${E4S_VERSION} https://github.com/spack/spack; \
    else \
      git fetch --all && git checkout -t origin/e4s-${E4S_VERSION}; \
    fi

COPY 0001-mpich-support-ch3-sock.patch /spack
COPY 0002-adios2-add-xrootd-variant.patch /spack

COPY packages.yaml /etc/spack/packages.yaml

WORKDIR /spack
# TODO: Patch only needed until we merge https://github.com/spack/spack/pull/40964
RUN if [ ${E4S_VERSION%.*} -le 23 ]; then git apply 0001-mpich-support-ch3-sock.patch; fi
RUN if [ -n "${PATCH_VARIANT_XROOTD}" ]; then git apply 0002-adios2-add-xrootd-variant.patch; fi
# Install base specs
RUN . /spack/share/spack/setup-env.sh && \
    if test -n "${EXTERNAL_PACKAGES}"; then spack external find ${EXTERNAL_PACKAGES}; fi && \
    spack mirror add E4S "https://cache.e4s.io/${E4S_VERSION}" && \
    export ADIOS_SPEC_NO_MPI="adios2~mpi${EXTRA_VARIANTS}" && \
    export ADIOS_SPEC_OPENMPI="adios2+mpi${EXTRA_VARIANTS} ^openmpi" && \
    export ADIOS_SPEC_MPICH="adios2+mpi${EXTRA_VARIANTS} ^mpich" && \
    spack config add "config:checksum:false" && \
    spack config add "config:build_jobs:$(nproc)" && \
    spack config add "concretizer:unify:true" && \
    if echo "$ENABLED_ENVS" | grep -q serial; then \
    spack env create adios2-ci-serial && \
    spack -e adios2-ci-serial add ${ADIOS_SPEC_NO_MPI} && \
    spack -e adios2-ci-serial concretize && \
    spack -e adios2-ci-serial install \
      --include-build-deps \
      --no-check-signature \
      --fail-fast \
      --only dependencies; \
    fi && \
    if echo "$ENABLED_ENVS" | grep -q ompi ; then \
    spack env create adios2-ci-ompi && \
    spack -e adios2-ci-ompi add ${ADIOS_SPEC_OPENMPI} && \
    spack -e adios2-ci-ompi concretize && \
    spack -e adios2-ci-ompi install \
      --include-build-deps \
      --no-check-signature \
      --fail-fast \
      --only dependencies; \
    fi && \
    if echo "$ENABLED_ENVS" | grep -q mpich; then \
    spack env create adios2-ci-mpich && \
    spack -e adios2-ci-mpich add ${ADIOS_SPEC_MPICH} && \
    spack -e adios2-ci-mpich concretize && \
    spack -e adios2-ci-mpich install \
      --include-build-deps \
      --no-check-signature \
      --fail-fast \
      --only dependencies; \
    fi && \
    spack clean -a && \
    echo "source /spack/share/spack/setup-env.sh" >> /etc/profile.d/zz-spack.sh

### Other missing packages (compared to el8 base):
RUN apt-get update && apt-get install -y \
    ccache \
    libcurl4-gnutls-dev && \
    apt-get remove -y \
    gcc-9 \
    g++-9 \
    gfortran-9 && \
    apt-get autoremove --purge -y && \
    apt-get clean && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100 && \
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 100 && \
    update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-11 100

# NONSPACK dependency
WORKDIR /opt/blosc2
RUN curl -L https://github.com/Blosc/c-blosc2/archive/refs/tags/v2.10.1.tar.gz | tar -xvz && \
    mkdir build && \
    cd build && \
    . /spack/share/spack/setup-env.sh && \
    spack env activate adios2-ci-serial && \
    cmake -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/blosc2/2.10.1 ../c-blosc2-2.10.1  && \
    cmake --build . -j$(grep -c '^processor' /proc/cpuinfo) && \
    cmake --install . && \
    cd .. && \
    rm -rf c-blosc2-2.10.1 build

ENV PATH /opt/cmake/bin:/opt/blosc2/2.10.1/bin:${PATH}
ENV LD_LIBRARY_PATH /opt/blosc2/2.10.1/lib64:${LD_LIBRARY_PATH}
ENV CMAKE_PREFIX_PATH /opt/blosc2/2.10.1:${CMAKE_PREFIX_PATH}

ENTRYPOINT ["/bin/bash", "--login"]
