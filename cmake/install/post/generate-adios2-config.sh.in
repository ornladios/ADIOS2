#!/bin/bash

# Disable the make jobserver???
unset MAKEFLAGS
unset MAKE

function make_target_flags() {
  local tgt=$1
  sleep 1
  make -j1 VERBOSE=1 $tgt 2>&1 | \
    awk "/foo.(c|cxx|F90)( |$)/{print} /-o *(lib)?$tgt/{print}" | \
    sed -e "s| \+| |g" -e "s| *[^ ]*$tgt[^ ]*||g" \
      -e "s| *-D *WITH_ADIOS2||" > $tgt.flags
}

function a_without_b() {
  local A="$1"
  local B="$2"
  local skip=0
  for a in $A
  do
    skip=0
    for b in ${B}
    do
      if [ "${a}" == "${b}" ]
      then
        skip=1
        break
      fi
    done
    if [ $skip -eq 1 ]
    then
      continue
    fi
    echo $a
  done
}

function flag_diff() {
  local A="$1"
  local B="$2"
  a_without_b "$2" "$1"
}

function prefixify() {
  echo "$@" | sed 's|@CMAKE_INSTALL_PREFIX@|${ADIOS2_PREFIX}|g'
}

export adios2_DIR="@CMAKE_INSTALL_PREFIX@"
CMAKE="@CMAKE_COMMAND@"
SOURCE_DIR="@ADIOS2_SOURCE_DIR@/cmake/install/post/adios2-config-dummy"
BUILD_DIR=$(mktemp -d)
pushd ${BUILD_DIR}

if [ @ADIOS2_CONFIG_MPICC@ -eq 1 ]
then
  export CC="@MPI_C_COMPILER@"
fi
if [ @ADIOS2_CONFIG_MPICXX@ -eq 1 ]
then
  export CXX="@MPI_CXX_COMPILER@"
fi
if [ @ADIOS2_CONFIG_MPIFC@ -eq 1 ]
then
  export FC="@MPI_Fortran_COMPILER@"
fi

echo "Configuring adios2-config dummy CMake project"
if ! ${CMAKE} -G "Unix Makefiles" ${SOURCE_DIR} ${EXTRA_CMAKE_ARGS}
then
  echo "Failed"
  exit 1
fi

rm -f adios2.flags

echo "Extacting ADIOS flags for C bindings"
echo "  Without ADIOS"
make_target_flags without_C
without_C_CFLAGS=$(head -1 without_C.flags)
without_C_LDFLAGS=$(tail -1 without_C.flags)
echo "  With ADIOS"
make_target_flags with_C
with_C_CFLAGS=$(head -1 with_C.flags)
with_C_LDFLAGS=$(tail -1 with_C.flags)
echo "  Extracting diff"
ADIOS2_C_CFLAGS="$(prefixify $(flag_diff "${without_C_CFLAGS}" "${with_C_CFLAGS}"))"
ADIOS2_C_LDFLAGS="$(prefixify $(flag_diff "${without_C_LDFLAGS}" "${with_C_LDFLAGS}"))"
echo "  Exporting"
echo ADIOS2_C_CFLAGS=\"${ADIOS2_C_CFLAGS}\" >> adios2.flags
echo ADIOS2_C_LDFLAGS=\"${ADIOS2_C_LDFLAGS}\" >> adios2.flags

echo "Extacting ADIOS flags for C++ bindings"
echo "  Without ADIOS"
make_target_flags without_CXX
without_CXX_CXXFLAGS=$(head -1 without_CXX.flags)
without_CXX_LDFLAGS=$(tail -1 without_CXX.flags)
echo "  With ADIOS"
make_target_flags with_CXX
with_CXX_CXXFLAGS=$(head -1 with_CXX.flags)
with_CXX_LDFLAGS=$(tail -1 with_CXX.flags)
echo "  Extracting diff"
ADIOS2_CXX_CXXFLAGS="$(prefixify $(flag_diff "${without_CXX_CXXFLAGS}" "${with_CXX_CXXFLAGS}"))"
ADIOS2_CXX_LDFLAGS="$(prefixify $(flag_diff "${without_CXX_LDFLAGS}" "${with_CXX_LDFLAGS}"))"
echo "  Exporting"
echo ADIOS2_CXX_CXXFLAGS=\"${ADIOS2_CXX_CXXFLAGS}\" >> adios2.flags
echo ADIOS2_CXX_LDFLAGS=\"${ADIOS2_CXX_LDFLAGS}\" >> adios2.flags

if [ @ADIOS2_CONFIG_FORTRAN@ -eq 1 ]
then
  echo "Extacting ADIOS flags for Fortran bindings"
  echo "  Without ADIOS"
  make_target_flags without_Fortran
  without_Fortran_FFLAGS=$(head -1 without_Fortran.flags)
  without_Fortran_LDFLAGS=$(tail -1 without_Fortran.flags)
  echo "  With ADIOS"
  make_target_flags with_Fortran
  with_Fortran_FFLAGS=$(head -1 with_Fortran.flags)
  with_Fortran_LDFLAGS=$(tail -1 with_Fortran.flags)
  echo "  Extracting diff"
  ADIOS2_Fortran_FFLAGS="$(prefixify $(flag_diff "${without_Fortran_FFLAGS}" "${with_Fortran_FFLAGS}"))"
  ADIOS2_Fortran_LDFLAGS="$(prefixify $(flag_diff "${without_Fortran_LDFLAGS}" "${with_Fortran_LDFLAGS}"))"
  echo "  Exporting"
  echo ADIOS2_Fortran_FFLAGS=\"${ADIOS2_Fortran_FFLAGS}\" >> adios2.flags
  echo ADIOS2_Fortran_LDFLAGS=\"${ADIOS2_Fortran_LDFLAGS}\" >> adios2.flags
else
  echo ADIOS2_Fortran_FFLAGS="" >> adios2.flags
  echo ADIOS2_Fortran_LDFLAGS="" >> adios2.flags
fi

echo "Writing @CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@/adios2-config"
cat \
  "@ADIOS2_BINARY_DIR@/cmake/install/post/adios2-config.pre.sh" \
  adios2.flags \
  "@ADIOS2_BINARY_DIR@/cmake/install/post/adios2-config.post.sh" > "@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@/adios2-config"
chmod +x "@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@/adios2-config"
popd 
rm -rf ${BUILD_DIR}
